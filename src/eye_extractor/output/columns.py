from eye_extractor.output.validators import is_int, is_in_range, is_date, contains

OUTPUT_COLUMNS = {
    # metadata
    'docid': [is_int],
    'studyid': [is_int],
    'date': [is_date],
    'encid': [is_int],
    # visual acuity
    'vacc_denominator_re': [is_int, is_in_range(15, 401)],
    'vacc_denominator_le': [is_int, is_in_range(15, 401)],
    'vasc_denominator_re': [is_int, is_in_range(15, 401)],
    'vasc_denominator_le': [is_int, is_in_range(15, 401)],
    'vaph_denominator_re': [is_int, is_in_range(15, 401)],
    'vaph_denominator_le': [is_int, is_in_range(15, 401)],
    'varx_denominator_re': [is_int, is_in_range(15, 401)],
    'varx_denominator_le': [is_int, is_in_range(15, 401)],
    'vacc_numbercorrect_re': [is_int, is_in_range(-6, 6)],
    'vacc_numbercorrect_le': [is_int, is_in_range(-6, 6)],
    'vasc_numbercorrect_re': [is_int, is_in_range(-6, 6)],
    'vasc_numbercorrect_le': [is_int, is_in_range(-6, 6)],
    'vaph_numbercorrect_re': [is_int, is_in_range(-6, 6)],
    'vaph_numbercorrect_le': [is_int, is_in_range(-6, 6)],
    'varx_numbercorrect_re': [is_int, is_in_range(-6, 6)],
    'varx_numbercorrect_le': [is_int, is_in_range(-6, 6)],
    'vacc_letters_re': [contains('CF', 'HM', 'LP', 'NLP')],
    'vacc_letters_le': [contains('CF', 'HM', 'LP', 'NLP')],
    'vasc_letters_re': [contains('CF', 'HM', 'LP', 'NLP')],
    'vasc_letters_le': [contains('CF', 'HM', 'LP', 'NLP')],
    'vaph_letters_re': [contains('CF', 'HM', 'LP', 'NLP')],
    'vaph_letters_le': [contains('CF', 'HM', 'LP', 'NLP')],
    'varx_letters_re': [contains('CF', 'HM', 'LP', 'NLP')],
    'varx_letters_le': [contains('CF', 'HM', 'LP', 'NLP')],
    'vacc_distance_re': [is_int],
    'vacc_distance_le': [is_int],
    'vasc_distance_re': [is_int],
    'vasc_distance_le': [is_int],
    'vaph_distance_re': [is_int],
    'vaph_distance_le': [is_int],
    'varx_distance_re': [is_int],
    'varx_distance_le': [is_int],
    'varx_type_re': [],
    'varx_type_le': [],
    'manifestrx_sphere_re': [],
    'manifestrx_cylinder_re': [],
    'manifestrx_axis_re': [],
    'manifestrx_add_re': [],
    'manifestrx_denom_re': [],
    'manifestrx_ncorr_re': [],
    'manifestrx_sphere_le': [],
    'manifestrx_cylinder_le': [],
    'manifestrx_axis_le': [],
    'manifestrx_add_le': [],
    'manifestrx_denom_le': [],
    'manifestrx_ncorr_le': [],

}
